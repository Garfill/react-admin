{"version":3,"sources":["components/CountTo/index.js","pages/Home/index.js"],"names":["CountTo","props","start","isPause","setState","localStart","duration","startTimestamp","countDown","state","localEnd","requestTimer","window","requestAnimationFrame","count","timestamp","isMount","progress","nowValue","Number","toFixed","decimals","displayValue","String","loop","loopCount","callback","cancelAnimationFrame","pause","resume","Function","reset","end","autoplay","this","Component","CountToContainer","styled","div","ButtonContainer","Home","clickBtn","func","countToRef","current","handleStartChange","e","startVal","target","value","handleEndChange","endVal","createRef","className","ref","onChange","style","marginRight","onClick","type"],"mappings":"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","file":"static/js/4.df1f532c.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class CountTo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localStart: props.start || 0,\n      localEnd: props.end || 0,\n      duration: props.duration || 3000,\n      nowValue: props.start || 0,\n      decimals: 0, // 小数点保留位数\n    }\n    this.startTimestamp = null; // 开始计数的时间戳\n    this.timestamp = null;\n    this.autoplay = props.autoplay || false;\n    this.loop = props.loop || false;\n    this.requestTimer = null;\n    this.isPause = !this.autoplay; // 是否处于暂停\n\n    this.state.displayValue = String(this.state.localStart);\n\n    this.isMount = false;\n  }\n  render() {\n    return (\n      <>\n        {\n          this.state.displayValue\n        }\n      </>\n    )\n  }\n\n  componentDidMount() {\n    if (this.autoplay) {\n      this.start()\n    }\n    this.isMount = true;\n  } \n\n  componentWillUnmount() {\n    // 外部改变 props 导致新的值挂载到已销毁组件\n    this.isMount = false;\n  }\n\n  start = () => {\n    if (!this.isPause) return\n    this.setState({\n      localStart: this.props.start || 0,\n      duration: this.props.duration || 3000,\n    }, () => {\n      this.startTimestamp = null;\n      this.isPause = false;\n      this.countDown = this.state.localStart > this.state.localEnd;\n      this.requestTimer = window.requestAnimationFrame(this.count)\n    })\n  }\n  \n  count = (timestamp) => {\n    if (!this.isMount) {\n      window.cancelAnimationFrame(this.requestTimer);\n      return;\n    }\n    if (!this.startTimestamp) {\n      this.startTimestamp = timestamp\n    }\n    this.timestamp = timestamp;\n    let progress = timestamp - this.startTimestamp;\n    let nowValue = 0;\n    if (!this.countDown) {\n      // 加法\n      nowValue = this.state.localStart + (this.state.localEnd - this.state.localStart) * (progress / this.state.duration);\n    } else {\n      // 减法\n      nowValue = this.state.localStart - (this.state.localStart - this.state.localEnd) * (progress / this.state.duration);\n    }\n    if (this.countDown) {\n      nowValue = nowValue < this.state.localEnd ? this.state.localEnd : nowValue;\n    } else {\n      nowValue = nowValue > this.state.localEnd ? this.state.localEnd : nowValue;\n    }\n    nowValue = Number(nowValue.toFixed(this.state.decimals));\n    this.setState({\n      nowValue,\n      displayValue: String(nowValue)\n    })\n    if (progress < this.state.duration) {\n      this.requestTimer = window.requestAnimationFrame(this.count)\n    } else {\n      if (this.loop) {\n        this.loopCount();\n      }\n      this.callback();\n    }\n  }\n\n  pause = () => {\n    if (this.isPause) return;\n    // 暂停 = 以当前值作为下一次开始的值，并且使用剩下的duration\n    window.cancelAnimationFrame(this.requestTimer);\n    // 下一次开始的状态\n    this.setState({\n      localStart: this.state.nowValue,\n      displayValue: String(this.state.nowValue),\n      duration: this.state.duration - (this.timestamp - this.startTimestamp),\n    });\n    this.isPause = true;\n  }\n\n  resume = () => {\n    this.startTimestamp = null;\n    this.isPause = false;\n    this.requestTimer = window.requestAnimationFrame(this.count)\n  }\n\n  callback = () => {\n    this.requestTimer = null;\n    if (this.props.callback && this.props.callback instanceof Function) {\n      this.props.callback();\n    }\n  }\n\n  loopCount = () => {\n    window.requestAnimationFrame(this.start)\n  }\n\n  reset = () => {\n    this.startTimestamp = null;\n    this.isPause = true;\n    window.cancelAnimationFrame(this.requestTimer);\n    this.setState({\n      localStart: this.props.start || 0,\n      displayValue: String(this.props.start || 0),\n    })\n  }\n  \n}\n\nexport default CountTo\n","import React, { Component, createRef, Fragment } from 'react'\nimport CountTo from 'components/CountTo'\nimport styled from 'styled-components'\nimport { Button, Input } from 'antd';\n\nconst CountToContainer = styled.div`\n  margin-bottom: 16px;\n  font-size: 24px;\n  color: #444;\n`\nconst ButtonContainer = styled.div`\n  margin-top: 16px;\n`\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.countToRef = createRef();\n\n    this.state = {\n      startVal: 50,\n      endVal: 100,\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <div className=\"box-container\">\n          <h2>计数器（Counter）</h2>\n          <CountToContainer>\n            <CountTo start={this.state.startVal} end={this.state.endVal} ref={this.countToRef} duration={1500}></CountTo>\n          </CountToContainer>\n          <div>\n            <span>开始值</span>\n            <Input value={this.state.startVal} onChange={this.handleStartChange}></Input>\n          </div>\n          <div>\n            <span>结束值</span>\n            <Input value={this.state.endVal} onChange={this.handleEndChange}></Input>\n          </div>\n          <ButtonContainer>\n            <Button style={{marginRight: '8px'}} onClick={() => this.clickBtn('start')} type=\"primary\">start</Button>\n            <Button style={{marginRight: '8px'}} onClick={() => this.clickBtn('pause')}>pause</Button>\n            <Button style={{marginRight: '8px'}} onClick={() => this.clickBtn('resume')} type=\"primary\">resume</Button>\n            <Button style={{marginRight: '8px'}} onClick={() => this.clickBtn('reset')}>reset</Button>\n          </ButtonContainer>\n        </div>\n      </Fragment>\n    )\n  }\n\n  clickBtn = (func) => {\n    this.countToRef.current[func]();\n  }\n  \n  handleStartChange = (e) => {\n    this.countToRef.current.pause()\n    this.setState({\n      startVal: Number(e.target.value)\n    })\n  }\n\n  handleEndChange = (e) => {\n    this.countToRef.current.pause()\n    this.setState({\n      endVal: Number(e.target.value)\n    })\n  }\n}\n\nexport default Home\n"],"sourceRoot":""}